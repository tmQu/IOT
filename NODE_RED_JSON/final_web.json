[
    {
        "id": "f8a1aba4038c0ca1",
        "type": "tab",
        "label": "Home",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "bcd029bb2fd55e96",
        "type": "tab",
        "label": "Register",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9a707663dfc1990e",
        "type": "tab",
        "label": "IFTT",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8d7c91e8fdc58ca7",
        "type": "tab",
        "label": "sign in",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "fa6fd5ee77bd9c94",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "e40f3dd7850268b2",
        "type": "MySQLdatabase",
        "name": "",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "iot_door",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "335061a30a3ce467",
        "type": "ui_tab",
        "name": "Register",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f9c40dfb452af412",
        "type": "ui_group",
        "name": "Manipulate data",
        "tab": "335061a30a3ce467",
        "order": 2,
        "disp": true,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "0613d1a52be909e0",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "74da67c4b792e198",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "66c01cef2411ea31",
        "type": "ui_group",
        "name": "Information",
        "tab": "335061a30a3ce467",
        "order": 5,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1fc8878b4fe3fc33",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "0e8a57501d0a7739",
        "type": "ui_group",
        "name": "Login",
        "tab": "e3fa4c65f2a5cd25",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e3fa4c65f2a5cd25",
        "type": "ui_tab",
        "name": "Login",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "0f15a0ad04b59a61",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "af61b3bc094d5805",
        "type": "ui_group",
        "name": "Home",
        "tab": "0f15a0ad04b59a61",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "eb817dcd1bf43434",
        "type": "ui_group",
        "name": "Move tab",
        "tab": "335061a30a3ce467",
        "order": 1,
        "disp": false,
        "width": 16,
        "collapse": false,
        "className": ""
    },
    {
        "id": "57875892e4d54dd5",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "600cb50a21797774",
        "order": 2,
        "width": 4,
        "height": 1
    },
    {
        "id": "41a89cc6510b194f",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "600cb50a21797774",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "ff88d3ac348830c4",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "6668fd1f17871daa",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "75fad3055bad2e88",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "eb817dcd1bf43434",
        "order": 2,
        "width": 12,
        "height": 1
    },
    {
        "id": "361b061d9695f0d7",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "f9c40dfb452af412",
        "order": 2,
        "width": 1,
        "height": 1
    },
    {
        "id": "bd08807380f7ac4d",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "f9c40dfb452af412",
        "order": 4,
        "width": 1,
        "height": 1
    },
    {
        "id": "2dde44b40e56df94",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "f9c40dfb452af412",
        "order": 7,
        "width": 6,
        "height": 1
    },
    {
        "id": "df6711a80f2bcc98",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "f9c40dfb452af412",
        "order": 10,
        "width": 10,
        "height": 1
    },
    {
        "id": "e237ca7d275d3b7b",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "f9c40dfb452af412",
        "order": 12,
        "width": 10,
        "height": 1
    },
    {
        "id": "05535b15af2179ea",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "f9c40dfb452af412",
        "order": 14,
        "width": 1,
        "height": 1
    },
    {
        "id": "b552279de73e46a3",
        "type": "ui_spacer",
        "z": "bcd029bb2fd55e96",
        "name": "spacer",
        "group": "f9c40dfb452af412",
        "order": 16,
        "width": 1,
        "height": 1
    },
    {
        "id": "63e4a468611a9fcf",
        "type": "local-storage",
        "name": "test"
    },
    {
        "id": "b82da486.9fc8d8",
        "type": "ui_group",
        "name": "Signin",
        "tab": "d65502b1.ee517",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c35e46a8.b04ce8",
        "type": "ui_group",
        "name": "SensorData",
        "tab": "d65502b1.ee517",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4de9506d.e7364",
        "type": "ui_group",
        "name": "History",
        "tab": "d65502b1.ee517",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d65502b1.ee517",
        "type": "ui_tab",
        "name": "Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d0335eab8cb70929",
        "type": "mqtt in",
        "z": "f8a1aba4038c0ca1",
        "name": "",
        "topic": "IOT_Smart_Door/RFID/OpenDoor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0613d1a52be909e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "026412b1c5d91139"
            ]
        ]
    },
    {
        "id": "abddf3b2669250df",
        "type": "mysql",
        "z": "f8a1aba4038c0ca1",
        "mydb": "e40f3dd7850268b2",
        "name": " SEARCH ID",
        "x": 630,
        "y": 280,
        "wires": [
            [
                "fb018d23cf446484",
                "de5948b99ca1543b"
            ]
        ]
    },
    {
        "id": "fb018d23cf446484",
        "type": "function",
        "z": "f8a1aba4038c0ca1",
        "name": "check ID, permission, get in/out",
        "func": "// check id\nif (msg.payload.length == 0)\n    msg.payload = 0\nelse\n{\n    //check get in or out\n    if (msg.payload[0].time_in == null) // first get in\n    {\n        msg.get_in = 'get in';\n    }\n    else\n    {\n        msg.get_in = 'get out';\n        msg.time_in = msg.payload[0].time_in\n        msg.time_out = msg.payload[0].time_out\n    }\n\n    // check permission\n    if (msg.payload[0].permission == 'YES' || msg.payload[0].role == 'M')\n        msg.payload = 1\n    else\n        msg.payload = 0\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 280,
        "wires": [
            [
                "20f7b361b42af35a"
            ]
        ]
    },
    {
        "id": "026412b1c5d91139",
        "type": "function",
        "z": "f8a1aba4038c0ca1",
        "name": "search ID in db",
        "func": "var id = msg.payload\nvar query = 'select E.id, E.name, E.role, E.permission, DATE_FORMAT(AR.time_get_in,\\'%d/%m/%Y %h:%m:%s\\') as \\'time_in\\', DATE_FORMAT(NOW(),\\'%d/%m/%Y %h:%m:%s\\') as \\'time_out\\'  from employee E left join currently_at_room AR on E.id = AR.id where E.id = \\'' + id + '\\''\nmsg.topic =  query\nmsg.id = id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 280,
        "wires": [
            [
                "abddf3b2669250df",
                "751025699bddab8f"
            ]
        ]
    },
    {
        "id": "20f7b361b42af35a",
        "type": "switch",
        "z": "f8a1aba4038c0ca1",
        "name": "Open un/successfully",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1140,
        "y": 280,
        "wires": [
            [
                "e6edc6dd336381fd"
            ],
            [
                "ee74dbf4e71a71b6"
            ]
        ]
    },
    {
        "id": "9ca516b58d385c11",
        "type": "mqtt out",
        "z": "f8a1aba4038c0ca1",
        "name": "",
        "topic": "IOT_Smart_Door/RFID/AccessPermission",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0613d1a52be909e0",
        "x": 1640,
        "y": 220,
        "wires": []
    },
    {
        "id": "e6edc6dd336381fd",
        "type": "function",
        "z": "f8a1aba4038c0ca1",
        "name": "denied msg",
        "func": "msg.payload = 'denied'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 220,
        "wires": [
            [
                "9ca516b58d385c11"
            ]
        ]
    },
    {
        "id": "ee74dbf4e71a71b6",
        "type": "function",
        "z": "f8a1aba4038c0ca1",
        "name": "accept msg",
        "func": "msg.payload = 'accept'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 320,
        "wires": [
            [
                "9ca516b58d385c11",
                "c705ac8505e7defd",
                "8057110058c181d1"
            ]
        ]
    },
    {
        "id": "c705ac8505e7defd",
        "type": "mqtt out",
        "z": "f8a1aba4038c0ca1",
        "name": "",
        "topic": "IOT_Smart_Door/Motor/OpenDoor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0613d1a52be909e0",
        "x": 1660,
        "y": 340,
        "wires": []
    },
    {
        "id": "1512d5c4a09485ab",
        "type": "mqtt out",
        "z": "f8a1aba4038c0ca1",
        "name": "",
        "topic": "IOT_Smart_Door/Door_Mode",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0613d1a52be909e0",
        "x": 210,
        "y": 480,
        "wires": []
    },
    {
        "id": "ed7e9091dac504ca",
        "type": "inject",
        "z": "f8a1aba4038c0ca1",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "21127407",
        "payloadType": "str",
        "x": 280,
        "y": 340,
        "wires": [
            [
                "026412b1c5d91139"
            ]
        ]
    },
    {
        "id": "4e4d5ef09eb35198",
        "type": "comment",
        "z": "f8a1aba4038c0ca1",
        "name": "Open unsuccessfully",
        "info": "",
        "x": 1350,
        "y": 180,
        "wires": []
    },
    {
        "id": "f35fc2eb6b205b91",
        "type": "comment",
        "z": "f8a1aba4038c0ca1",
        "name": "Open successfully",
        "info": "",
        "x": 1290,
        "y": 380,
        "wires": []
    },
    {
        "id": "8057110058c181d1",
        "type": "switch",
        "z": "f8a1aba4038c0ca1",
        "name": "get in or out",
        "property": "get_in",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "get in",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "get out",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1470,
        "y": 460,
        "wires": [
            [
                "e4fa6784370b76f6"
            ],
            [
                "18d4f064ad9ac2ba"
            ]
        ]
    },
    {
        "id": "96aaa426fd570135",
        "type": "comment",
        "z": "f8a1aba4038c0ca1",
        "name": "Return un/sucess msg",
        "info": "",
        "x": 1580,
        "y": 180,
        "wires": []
    },
    {
        "id": "e4fa6784370b76f6",
        "type": "function",
        "z": "f8a1aba4038c0ca1",
        "name": "insert qry to currently_at_room",
        "func": "var id = msg.id\nvar query = 'insert into currently_at_room values(\\'' + id + '\\', NOW())'\nmsg.topic = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 400,
        "wires": [
            [
                "80de71bddeb494eb"
            ]
        ]
    },
    {
        "id": "80de71bddeb494eb",
        "type": "mysql",
        "z": "f8a1aba4038c0ca1",
        "mydb": "e40f3dd7850268b2",
        "name": "currently_at_room",
        "x": 2030,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "18d4f064ad9ac2ba",
        "type": "function",
        "z": "f8a1aba4038c0ca1",
        "name": "delete id in currently_at_room",
        "func": "var id = msg.id\nvar query = 'delete from currently_at_room where id = \\'' + id + '\\''\nmsg.topic = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 460,
        "wires": [
            [
                "80de71bddeb494eb",
                "9ed24f938d01c823"
            ]
        ]
    },
    {
        "id": "de5948b99ca1543b",
        "type": "debug",
        "z": "f8a1aba4038c0ca1",
        "name": "debug 10",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 200,
        "wires": []
    },
    {
        "id": "751025699bddab8f",
        "type": "debug",
        "z": "f8a1aba4038c0ca1",
        "name": "debug 11",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 220,
        "wires": []
    },
    {
        "id": "9ed24f938d01c823",
        "type": "debug",
        "z": "f8a1aba4038c0ca1",
        "name": "debug 12",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2020,
        "y": 500,
        "wires": []
    },
    {
        "id": "dcb06e92ab53484f",
        "type": "ui_text_input",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "label": "id",
        "tooltip": "",
        "group": "f9c40dfb452af412",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "id",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 290,
        "y": 100,
        "wires": [
            [
                "df5bf6a5d225b2c1"
            ]
        ]
    },
    {
        "id": "8a68b5aa93ed3642",
        "type": "ui_text_input",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "label": "name",
        "tooltip": "",
        "group": "f9c40dfb452af412",
        "order": 6,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "name",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "11376ebb65e7be6e"
            ]
        ]
    },
    {
        "id": "c5ecbf2223b95974",
        "type": "ui_dropdown",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "label": "role",
        "tooltip": "",
        "place": "Select option",
        "group": "f9c40dfb452af412",
        "order": 9,
        "width": 6,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "master",
                "value": "M",
                "type": "str"
            },
            {
                "label": "employee",
                "value": "E",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "role",
        "topicType": "str",
        "className": "",
        "x": 290,
        "y": 200,
        "wires": [
            [
                "93334d9b48d41b56",
                "4777ccd6e3f3de36"
            ]
        ]
    },
    {
        "id": "f11fc7385b91d72a",
        "type": "ui_button",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "group": "f9c40dfb452af412",
        "order": 13,
        "width": 6,
        "height": 1,
        "passthru": false,
        "label": "Register",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 620,
        "y": 360,
        "wires": [
            [
                "435241551983f170"
            ]
        ]
    },
    {
        "id": "4c4c0c85bddf39fb",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "get personInfor from flow",
        "func": "var data = flow.get('personInfor')\nvar values = 'VALUES(\\'' +data[0] + '\\',\\'' + data[1] + '\\',\\'' + data[2] + '\\', \\'YES\\''\nif (data[2] == 'M')\n{\n    values += ',\\'' + data[3] + '\\')'\n}\nelse\n{\n    values += ',\\'' + 'NULL' + '\\')'\n}\n\nvar query = `INSERT INTO employee (id, name, role, permission, pw) ` + values \n\nmsg.topic = query\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 240,
        "wires": [
            [
                "e9758a47371b79f7",
                "194a007f64f0b4b7"
            ]
        ]
    },
    {
        "id": "248ea0b3350d88d3",
        "type": "mqtt out",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "topic": "IOT_Smart_Door/RFID/Get_New_Card_Info",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "0613d1a52be909e0",
        "x": 1990,
        "y": 240,
        "wires": []
    },
    {
        "id": "2592cd50f27e3adf",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "Enable/Disable button",
        "func": "\nif (msg.payload == \"register\")\n{\n    msg.background = \"green\";\n    msg.enabled = true\n}\nelse{\n    msg.background = \"grey\"\n    msg.enabled = false\n}\nreturn msg\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 360,
        "wires": [
            [
                "f11fc7385b91d72a"
            ]
        ]
    },
    {
        "id": "3aa9ec6707f32480",
        "type": "mqtt in",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "topic": "IOT_Smart_Door/RFID/Register_NewCard",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0613d1a52be909e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 360,
        "wires": [
            [
                "2592cd50f27e3adf"
            ]
        ]
    },
    {
        "id": "435241551983f170",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "check input values",
        "func": "var id = flow.get('id') || ''\nvar name = flow.get('name') || ''\nvar role = flow.get('role') || ''\nvar pw = flow.get('pw') || ''\n\nvar personInfor = [id, name, role, pw]\nvar numInfor = 0\nif (role == 'M')\n{\n    numInfor = 4\n}\nelse\n{\n    numInfor = 3\n}\n\nfor (var i = 0; i < numInfor; i++)\n{\n    if (personInfor[i].length == 0)\n    {\n        msg.payload = 0\n        return msg\n    }\n}\nflow.set('personInfor', personInfor)\nmsg.payload = 1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 360,
        "wires": [
            [
                "0dc18b814924f3e5"
            ]
        ]
    },
    {
        "id": "0dc18b814924f3e5",
        "type": "switch",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 360,
        "wires": [
            [
                "4c4c0c85bddf39fb"
            ],
            [
                "aca5546c597376f7"
            ]
        ]
    },
    {
        "id": "e9758a47371b79f7",
        "type": "mysql",
        "z": "bcd029bb2fd55e96",
        "mydb": "e40f3dd7850268b2",
        "name": "INSERT REGISTER DATA",
        "x": 1400,
        "y": 240,
        "wires": [
            [
                "0b19426b88e44605",
                "b67be873fceebf90",
                "9352ca7d6e0b193c",
                "e57f30af57180567"
            ]
        ]
    },
    {
        "id": "a34bfa8eae86b884",
        "type": "catch",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "scope": [
            "e9758a47371b79f7",
            "4292171d252bd65d"
        ],
        "uncaught": false,
        "x": 1070,
        "y": 140,
        "wires": [
            [
                "a7a9b6514eee1064"
            ]
        ]
    },
    {
        "id": "fa099a47d75d5bca",
        "type": "ui_toast",
        "z": "bcd029bb2fd55e96",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1450,
        "y": 140,
        "wires": []
    },
    {
        "id": "a7a9b6514eee1064",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "catch errors",
        "func": "msg.payload = msg.error.message\nmsg.topic = \"try again\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 140,
        "wires": [
            [
                "fa099a47d75d5bca"
            ]
        ]
    },
    {
        "id": "d2396ba049d9260a",
        "type": "comment",
        "z": "bcd029bb2fd55e96",
        "name": "catch erros",
        "info": "Catch errors when insert values to database",
        "x": 1080,
        "y": 80,
        "wires": []
    },
    {
        "id": "e3781662c4f7729e",
        "type": "ui_toast",
        "z": "bcd029bb2fd55e96",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1330,
        "y": 440,
        "wires": []
    },
    {
        "id": "aca5546c597376f7",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "input notification",
        "func": "msg.payload = \"Please input all the text box\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 440,
        "wires": [
            [
                "e3781662c4f7729e"
            ]
        ]
    },
    {
        "id": "df5bf6a5d225b2c1",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "push id to flow",
        "func": "flow.set('id', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "11376ebb65e7be6e",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "push name to flow",
        "func": "flow.set('name', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "93334d9b48d41b56",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "push role to flow",
        "func": "flow.set('role', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "0b19426b88e44605",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "get personInfor from flow",
        "func": "msg.payload = flow.get('personInfor')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1670,
        "y": 240,
        "wires": [
            [
                "248ea0b3350d88d3"
            ]
        ]
    },
    {
        "id": "3cca66f5dd10f768",
        "type": "inject",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "register",
        "payloadType": "str",
        "x": 240,
        "y": 420,
        "wires": [
            [
                "2592cd50f27e3adf"
            ]
        ]
    },
    {
        "id": "121458b9efbb3762",
        "type": "ui_toast",
        "z": "bcd029bb2fd55e96",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1890,
        "y": 180,
        "wires": []
    },
    {
        "id": "b67be873fceebf90",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "successfully register",
        "func": "msg.payload = \"successfully register\"\nmsg.topic = \"\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 180,
        "wires": [
            [
                "121458b9efbb3762"
            ]
        ]
    },
    {
        "id": "b2680d0582373c27",
        "type": "mysql",
        "z": "bcd029bb2fd55e96",
        "mydb": "e40f3dd7850268b2",
        "name": "Show employee infor",
        "x": 1920,
        "y": 440,
        "wires": [
            [
                "60de98aa47ed846a",
                "c6a19959f5e6e0a1"
            ]
        ]
    },
    {
        "id": "9352ca7d6e0b193c",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "query all",
        "func": "var query\nquery = 'select id, name, role, permission from employee'\nmsg.topic = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1720,
        "y": 440,
        "wires": [
            [
                "b2680d0582373c27"
            ]
        ]
    },
    {
        "id": "60de98aa47ed846a",
        "type": "ui_table",
        "z": "bcd029bb2fd55e96",
        "group": "66c01cef2411ea31",
        "name": "",
        "order": 1,
        "width": 16,
        "height": 8,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 2150,
        "y": 440,
        "wires": []
    },
    {
        "id": "a51884f0b592095f",
        "type": "inject",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 1550,
        "y": 440,
        "wires": [
            [
                "9352ca7d6e0b193c"
            ]
        ]
    },
    {
        "id": "63499364e77d8ac9",
        "type": "ui_text_input",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "label": "id delete",
        "tooltip": "",
        "group": "f9c40dfb452af412",
        "order": 3,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 900,
        "y": 580,
        "wires": [
            [
                "95c0ae66b4d3aa6d"
            ]
        ]
    },
    {
        "id": "95c0ae66b4d3aa6d",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "push delete ID",
        "func": "flow.set('idDel', msg.payload)\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "382e24d1134bdc66",
        "type": "ui_button",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "group": "f9c40dfb452af412",
        "order": 15,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Delete",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 910,
        "y": 640,
        "wires": [
            [
                "6d7bd924cb58d918"
            ]
        ]
    },
    {
        "id": "6d7bd924cb58d918",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "create delete query",
        "func": "var id = flow.get('idDel') || ''\nvar query = 'delete from employee where id = \\'' + id + '\\''\nmsg.topic = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 640,
        "wires": [
            [
                "4292171d252bd65d"
            ]
        ]
    },
    {
        "id": "4292171d252bd65d",
        "type": "mysql",
        "z": "bcd029bb2fd55e96",
        "mydb": "e40f3dd7850268b2",
        "name": "Delete data",
        "x": 1390,
        "y": 640,
        "wires": [
            [
                "9352ca7d6e0b193c"
            ]
        ]
    },
    {
        "id": "715abe913b0ae1ca",
        "type": "ui_text_input",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "label": "id update",
        "tooltip": "",
        "group": "f9c40dfb452af412",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 900,
        "y": 740,
        "wires": [
            [
                "a438d9a5db15f31f"
            ]
        ]
    },
    {
        "id": "eaafadb01694e577",
        "type": "ui_dropdown",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "label": "Permission",
        "tooltip": "",
        "place": "Select option",
        "group": "f9c40dfb452af412",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "YES",
                "value": "YES",
                "type": "str"
            },
            {
                "label": "NO",
                "value": "NO",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 910,
        "y": 800,
        "wires": [
            [
                "af858a2e7aa752cb"
            ]
        ]
    },
    {
        "id": "a438d9a5db15f31f",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "push ID update",
        "func": "flow.set('idUpdate', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "af858a2e7aa752cb",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "push permission",
        "func": "flow.set('permission', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "04cbd0660fe4ab4a",
        "type": "ui_button",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "group": "f9c40dfb452af412",
        "order": 17,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Update",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 900,
        "y": 860,
        "wires": [
            [
                "6897e6cde9101533"
            ]
        ]
    },
    {
        "id": "6897e6cde9101533",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "create update query",
        "func": "var id = flow.get('idUpdate') || ''\nvar permission = flow.get('permission') || ''\nvar query = 'update employee set permission = \\'' + permission + '\\' where id = \\'' + id + '\\' and role = \\'E\\''\nmsg.topic = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 860,
        "wires": [
            [
                "8ebef5eccfb66df1"
            ]
        ]
    },
    {
        "id": "8ebef5eccfb66df1",
        "type": "mysql",
        "z": "bcd029bb2fd55e96",
        "mydb": "e40f3dd7850268b2",
        "name": "Update",
        "x": 1400,
        "y": 860,
        "wires": [
            [
                "9352ca7d6e0b193c",
                "f9f0f639c2dea015"
            ]
        ]
    },
    {
        "id": "c6a19959f5e6e0a1",
        "type": "debug",
        "z": "bcd029bb2fd55e96",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2220,
        "y": 380,
        "wires": []
    },
    {
        "id": "f9f0f639c2dea015",
        "type": "debug",
        "z": "bcd029bb2fd55e96",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 860,
        "wires": []
    },
    {
        "id": "afa8b05c7c2fdf70",
        "type": "comment",
        "z": "bcd029bb2fd55e96",
        "name": "Delete",
        "info": "",
        "x": 770,
        "y": 620,
        "wires": []
    },
    {
        "id": "a967ca03d12f5d24",
        "type": "comment",
        "z": "bcd029bb2fd55e96",
        "name": "Change permission",
        "info": "",
        "x": 710,
        "y": 800,
        "wires": []
    },
    {
        "id": "11395e30b8bebc63",
        "type": "ui_button",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "group": "eb817dcd1bf43434",
        "order": 1,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "Home",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "home",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "67bf4cc0a8b4240e"
            ]
        ]
    },
    {
        "id": "a2ee63b10de1bcbf",
        "type": "ui_ui_control",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "events": "all",
        "x": 600,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "67bf4cc0a8b4240e",
        "type": "change",
        "z": "bcd029bb2fd55e96",
        "name": "move to home page",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Home\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 40,
        "wires": [
            [
                "a2ee63b10de1bcbf"
            ]
        ]
    },
    {
        "id": "711f534fd9ad08c0",
        "type": "ui_text_input",
        "z": "bcd029bb2fd55e96",
        "name": "",
        "label": "password",
        "tooltip": "",
        "group": "f9c40dfb452af412",
        "order": 11,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 700,
        "y": 260,
        "wires": [
            [
                "3d7d6d0dabe3bf21"
            ]
        ]
    },
    {
        "id": "4777ccd6e3f3de36",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "Enabled/Disabled text input",
        "func": "if (msg.payload == 'M')\n{\n    msg.enabled = true\n}\nelse\n{\n    msg.enabled = false\n}\nmsg.payload = ''\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 260,
        "wires": [
            [
                "711f534fd9ad08c0"
            ]
        ]
    },
    {
        "id": "3d7d6d0dabe3bf21",
        "type": "function",
        "z": "bcd029bb2fd55e96",
        "name": "push pw to flow",
        "func": "flow.set('pw', msg.payload)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "e94da6e3fb97a489",
        "type": "inject",
        "z": "bcd029bb2fd55e96",
        "name": "disable pw input",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 260,
        "wires": [
            [
                "4777ccd6e3f3de36"
            ]
        ]
    },
    {
        "id": "194a007f64f0b4b7",
        "type": "debug",
        "z": "bcd029bb2fd55e96",
        "name": "debug 14",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "topic",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 300,
        "wires": []
    },
    {
        "id": "e57f30af57180567",
        "type": "debug",
        "z": "bcd029bb2fd55e96",
        "name": "debug 15",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1660,
        "y": 320,
        "wires": []
    },
    {
        "id": "cf77d4e32de13b8b",
        "type": "mqtt in",
        "z": "9a707663dfc1990e",
        "name": "",
        "topic": "IOT_Smart_Door/Req_Enter",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "0613d1a52be909e0",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 260,
        "wires": [
            [
                "9f67e7958ecfab41"
            ]
        ]
    },
    {
        "id": "9f67e7958ecfab41",
        "type": "function",
        "z": "9a707663dfc1990e",
        "name": "search ID in db",
        "func": "var id = msg.payload\nvar query = 'select * from employee where id = \\'' + id + '\\''\nmsg.topic =  query\nmsg.id = id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 260,
        "wires": [
            [
                "3616cb7fee37e1fa"
            ]
        ]
    },
    {
        "id": "3616cb7fee37e1fa",
        "type": "mysql",
        "z": "9a707663dfc1990e",
        "mydb": "e40f3dd7850268b2",
        "name": " SEARCH ID",
        "x": 650,
        "y": 260,
        "wires": [
            [
                "c94488baecfcb21c"
            ]
        ]
    },
    {
        "id": "5d1400843c58c405",
        "type": "http request",
        "z": "9a707663dfc1990e",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://maker.ifttt.com/trigger/Access notification/with/key/cui7hjUIvdp6gsfLaGG0z9nEgxyHukNSQWBI7JVasGU?value1={{id}};value2={{name}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c94488baecfcb21c",
        "type": "function",
        "z": "9a707663dfc1990e",
        "name": "get id and name",
        "func": "msg.id = msg.payload[0].id\nmsg.name = msg.payload[0].name\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 260,
        "wires": [
            [
                "5d1400843c58c405"
            ]
        ]
    },
    {
        "id": "6efd8979c28530ad",
        "type": "function",
        "z": "8d7c91e8fdc58ca7",
        "name": "check username pw",
        "func": "\nif (msg.payload.length != 0)\n{\n    var user = '\\\"' + msg.payload[0].id + '\\\"'\n    msg.payload = '{\\\"key\\\":\\\"user\\\",\\\"value\\\":' + user +'}'\n    msg.localStorage = JSON.parse(msg.payload)\n    msg.success = 1;\n}\nelse\n{\n    msg.success = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 420,
        "wires": [
            [
                "19adcae4f1cd6089"
            ]
        ]
    },
    {
        "id": "f76415f880c9374b",
        "type": "ui_ui_control",
        "z": "8d7c91e8fdc58ca7",
        "name": "",
        "events": "all",
        "x": 1660,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "748e42b8d9231a80",
        "type": "change",
        "z": "8d7c91e8fdc58ca7",
        "name": "login to register page",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"tab\":\"Register\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 320,
        "wires": [
            [
                "f76415f880c9374b"
            ]
        ]
    },
    {
        "id": "19adcae4f1cd6089",
        "type": "switch",
        "z": "8d7c91e8fdc58ca7",
        "name": "",
        "property": "success",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "neq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1250,
        "y": 420,
        "wires": [
            [
                "748e42b8d9231a80",
                "019f5442aeb19fa1"
            ],
            [
                "1d960eb617f3f71f"
            ]
        ]
    },
    {
        "id": "5ad1c0f2667f7ac5",
        "type": "ui_toast",
        "z": "8d7c91e8fdc58ca7",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1710,
        "y": 480,
        "wires": []
    },
    {
        "id": "1d960eb617f3f71f",
        "type": "function",
        "z": "8d7c91e8fdc58ca7",
        "name": "unsucess Login",
        "func": "msg.payload = \"Login unsucessfully\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 480,
        "wires": [
            [
                "5ad1c0f2667f7ac5"
            ]
        ]
    },
    {
        "id": "019f5442aeb19fa1",
        "type": "function",
        "z": "8d7c91e8fdc58ca7",
        "name": "sucess Login",
        "func": "msg.payload = \"Login sucessfully\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1450,
        "y": 360,
        "wires": [
            [
                "ec2af34eeac18134"
            ]
        ]
    },
    {
        "id": "ec2af34eeac18134",
        "type": "ui_toast",
        "z": "8d7c91e8fdc58ca7",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1650,
        "y": 360,
        "wires": []
    },
    {
        "id": "32ebca8dc8b212b5",
        "type": "ui_form",
        "z": "8d7c91e8fdc58ca7",
        "name": "",
        "label": "",
        "group": "0e8a57501d0a7739",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "Login",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 350,
        "y": 420,
        "wires": [
            [
                "01950e24d54a97af"
            ]
        ]
    },
    {
        "id": "ea12a77ad0df1b37",
        "type": "mysql",
        "z": "8d7c91e8fdc58ca7",
        "mydb": "e40f3dd7850268b2",
        "name": "get account from db",
        "x": 780,
        "y": 420,
        "wires": [
            [
                "6efd8979c28530ad"
            ]
        ]
    },
    {
        "id": "01950e24d54a97af",
        "type": "function",
        "z": "8d7c91e8fdc58ca7",
        "name": "query account pw",
        "func": "var user = msg.payload.username;\nvar pw = msg.payload.password;\n\nuser = '\\'' + user + '\\''\npw = '\\'' + pw + '\\''\n\nvar query = 'select * from employee where role = \\'M\\' and id = ' + user + ' and pw = ' + pw\nmsg.topic = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 420,
        "wires": [
            [
                "ea12a77ad0df1b37"
            ]
        ]
    },
    {
        "id": "5bc0fdddeca57594",
        "type": "ui_ui_control",
        "z": "8d7c91e8fdc58ca7",
        "name": "",
        "events": "all",
        "x": 160,
        "y": 340,
        "wires": [
            [
                "c22e4d7543f44bc4",
                "5de135ef5e34c791",
                "a60f0fa876d2a2da"
            ]
        ]
    },
    {
        "id": "c22e4d7543f44bc4",
        "type": "function",
        "z": "8d7c91e8fdc58ca7",
        "name": "function 2",
        "func": "var accountLog = flow.get('accountLog') || []\nmsg.payload = 100\nvar ip = msg.socketip\n\nfor (var i = 0; i < accountLog.length; i++)\n{\n    if (ip == accountLog[i])\n    {\n        accountLog.slice(i, 1)\n        msg.payload = 100\n        return msg\n    }\n}\n\naccountLog.push(ip)\nflow.set('accountLog', accountLog)\nmsg.payload = 1\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 340,
        "wires": [
            [
                "b702039cfa32bb3d",
                "f281f36350195e83",
                "e40a93f483a9f777"
            ]
        ]
    },
    {
        "id": "b702039cfa32bb3d",
        "type": "switch",
        "z": "8d7c91e8fdc58ca7",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 320,
        "wires": [
            [
                "32ebca8dc8b212b5"
            ]
        ]
    },
    {
        "id": "5de135ef5e34c791",
        "type": "debug",
        "z": "8d7c91e8fdc58ca7",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "socketip",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 280,
        "wires": []
    },
    {
        "id": "f281f36350195e83",
        "type": "debug",
        "z": "8d7c91e8fdc58ca7",
        "name": "debug 21",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 260,
        "wires": []
    },
    {
        "id": "e40a93f483a9f777",
        "type": "debug",
        "z": "8d7c91e8fdc58ca7",
        "name": "debug 22",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "text",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 500,
        "y": 220,
        "wires": []
    },
    {
        "id": "f4d6c814c86ed619",
        "type": "debug",
        "z": "8d7c91e8fdc58ca7",
        "name": "debug 23",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 160,
        "wires": []
    },
    {
        "id": "10cdfb457ed081d8",
        "type": "function",
        "z": "8d7c91e8fdc58ca7",
        "name": "function 3",
        "func": "msg.payload = flow.get('accountLog')\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 140,
        "wires": [
            [
                "f4d6c814c86ed619"
            ]
        ]
    },
    {
        "id": "b3a4d8a457b181ca",
        "type": "inject",
        "z": "8d7c91e8fdc58ca7",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "a",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "10cdfb457ed081d8"
            ]
        ]
    },
    {
        "id": "a60f0fa876d2a2da",
        "type": "debug",
        "z": "8d7c91e8fdc58ca7",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 240,
        "wires": []
    },
    {
        "id": "bd456e4e.359d8",
        "type": "ui_form",
        "z": "fa6fd5ee77bd9c94",
        "name": "Dashboard Sign-In",
        "label": "",
        "group": "b82da486.9fc8d8",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "cancel",
        "topic": "",
        "topicType": "str",
        "splitLayout": false,
        "className": "",
        "x": 930,
        "y": 640,
        "wires": [
            [
                "ea809461.f36198",
                "a926c1ff.ede37",
                "6cabb33.95cd54c"
            ]
        ]
    },
    {
        "id": "6603f3ab.d89abc",
        "type": "debug",
        "z": "fa6fd5ee77bd9c94",
        "name": "Debug Account Log ",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1498.0000915527344,
        "y": 601.0000076293945,
        "wires": []
    },
    {
        "id": "bc6dfbc9.d9d138",
        "type": "comment",
        "z": "fa6fd5ee77bd9c94",
        "name": "Sign-In Section",
        "info": "",
        "x": 930.0000076293945,
        "y": 582.9999961853027,
        "wires": []
    },
    {
        "id": "ea809461.f36198",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Account Log",
        "func": "var accountlog =  flow.get(\"accountlog\") || [] ; \n\naccountlog.push({ accessAt : new Date(), username : msg.payload.username})\n\nflow.set(\"accountlog\", accountlog);\n\nmsg.payload = accountlog;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1129.0000076293945,
        "y": 609.9999961853027,
        "wires": [
            [
                "6603f3ab.d89abc"
            ]
        ]
    },
    {
        "id": "a926c1ff.ede37",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Account Verification",
        "func": "var accounts =  flow.get(\"accounts\") || [ { username : \"admin\", password : \"admin\"},{ username : \"guest\", password : \"guest\"}] ; \n\nvar username = msg.payload.username ;\nvar password = msg.payload.password ; \n\nmsg.payload = 1;\n\naccounts.forEach(function ( account ){\n    if ( account.username == username ) {\n       msg.payload = 2;\n       if ( account.password == password ) {\n           msg.payload = 0;\n       } \n    }\n});\n\nif ( msg.payload == 0 ) {\n  var currentsocketid = flow.get(\"clientid\") || undefined;\n  if ( currentsocketid !== undefined && currentsocketid !== msg.socketid ) msg.payload = 3;\n}\n// keep the original socketid from msg.socketid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1142.0000457763672,
        "y": 655.0000057220459,
        "wires": [
            [
                "88afc196.8abc2"
            ]
        ]
    },
    {
        "id": "88afc196.8abc2",
        "type": "switch",
        "z": "fa6fd5ee77bd9c94",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1311.00004196167,
        "y": 685.9999885559082,
        "wires": [
            [
                "eefb7b9e.f5daa8"
            ],
            [
                "2f57eca.40fa214"
            ],
            [
                "cc34d440.a91948"
            ],
            [
                "126fd334.ed13ed"
            ]
        ]
    },
    {
        "id": "eefb7b9e.f5daa8",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "= 0 : Success",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nflow.set(\"sessionTimer\", currTime);\nflow.set(\"clientid\", msg.socketid);\n/* ui-control payload */\nmsg.payload = { group: {\n    show : [\"Dashboard_SensorData\", \"Another_History\"],\n    hide : [\"Dashboard_Signin\"]\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1480.999885559082,
        "y": 641.9999980926514,
        "wires": [
            [
                "5c0b7126.396e8"
            ]
        ]
    },
    {
        "id": "2f57eca.40fa214",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "= 1 : Unknown User",
        "func": "msg.payload = \"Username Doesn't exist!!!\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1501.9998931884766,
        "y": 679,
        "wires": [
            [
                "61e843e4.4d74cc"
            ]
        ]
    },
    {
        "id": "cc34d440.a91948",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "= 2 : Wrong Password",
        "func": "msg.payload = \"Invalid Password\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1502.9999618530273,
        "y": 716.0000123977661,
        "wires": [
            [
                "61e843e4.4d74cc"
            ]
        ]
    },
    {
        "id": "5c0b7126.396e8",
        "type": "ui_ui_control",
        "z": "fa6fd5ee77bd9c94",
        "name": "Go to Sensor/History Group",
        "x": 1768.0000686645508,
        "y": 641.9999942779541,
        "wires": [
            []
        ]
    },
    {
        "id": "61e843e4.4d74cc",
        "type": "ui_toast",
        "z": "fa6fd5ee77bd9c94",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Authentication Failed",
        "name": "Authentication Failure Dialog",
        "x": 1767.9999732971191,
        "y": 699,
        "wires": [
            []
        ]
    },
    {
        "id": "d60f3dd8.0214b",
        "type": "comment",
        "z": "fa6fd5ee77bd9c94",
        "name": "Session Management - 15 secs for this demo",
        "info": "",
        "x": 1009.5,
        "y": 799.0000076293945,
        "wires": []
    },
    {
        "id": "643a01a8.560ea",
        "type": "inject",
        "z": "fa6fd5ee77bd9c94",
        "name": "Timer",
        "repeat": "3",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 918.0000076293945,
        "y": 887.9999923706055,
        "wires": [
            [
                "bc828c1d.b3504",
                "f6900b2.d3e9ef8"
            ]
        ]
    },
    {
        "id": "bc828c1d.b3504",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Detect Session Timer",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar SESSION_TIMEOUT = 150000; //15 secs\n\nif ( sessionTimer === 0 /* Inactive, No user signed in */ ) {\n    msg.payload = 2;\n} else {\n    if ( currTime - sessionTimer > SESSION_TIMEOUT ) {\n      msg.payload = 0;  \n    } else {\n      msg.payload = 1;        \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1106.0000381469727,
        "y": 854.0000076293945,
        "wires": [
            [
                "50a18f10.e23c2",
                "f0557a14152d478c"
            ]
        ]
    },
    {
        "id": "50a18f10.e23c2",
        "type": "switch",
        "z": "fa6fd5ee77bd9c94",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1276.000072479248,
        "y": 852.0000076293945,
        "wires": [
            [
                "5b39c16e.da2f"
            ],
            [
                "91c7a0ab.ec163"
            ],
            [
                "71d9aa2e.665fd4"
            ]
        ]
    },
    {
        "id": "5b39c16e.da2f",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Time-Out",
        "func": "/* activate session timer */\nvar sessionTimer =  flow.get(\"sessionTimer\") || 0; \nflow.set(\"sessionTimer\", 0);\n\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = \"Session Expired! Please singin again!\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1431.999984741211,
        "y": 825.0000114440918,
        "wires": [
            [
                "d29000e.556e5",
                "a3d5d44d.a71ce8"
            ]
        ]
    },
    {
        "id": "d29000e.556e5",
        "type": "ui_toast",
        "z": "fa6fd5ee77bd9c94",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "topic": "Session Timeout",
        "name": "Time-Out Dialog",
        "x": 1619.500114440918,
        "y": 791.0000114440918,
        "wires": [
            []
        ]
    },
    {
        "id": "8859efbd.09b1b",
        "type": "ui_ui_control",
        "z": "fa6fd5ee77bd9c94",
        "name": "Go to Signin Group",
        "x": 1826.5000324249268,
        "y": 826.9999961853027,
        "wires": [
            []
        ]
    },
    {
        "id": "a3d5d44d.a71ce8",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Sign-In Redirection",
        "func": "var msg = {};\n\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = { group: {\n    hide : [\"Dashboard_SensorData\", \n            \"Dashboard_History\"],\n    show : [\"Dashboard_Signin\"]\n}\n};\n\nflow.set(\"clientid\", undefined);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1630.0000228881836,
        "y": 828.0000076293945,
        "wires": [
            [
                "8859efbd.09b1b"
            ]
        ]
    },
    {
        "id": "de95afea.546e3",
        "type": "ui_toast",
        "z": "fa6fd5ee77bd9c94",
        "position": "bottom right",
        "displayTime": "1",
        "highlight": "",
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "topic": "Timer",
        "name": "Display Remaining Time",
        "x": 1439.7222023010254,
        "y": 941.9999923706055,
        "wires": []
    },
    {
        "id": "4da58462.7ddd1c",
        "type": "comment",
        "z": "fa6fd5ee77bd9c94",
        "name": "Sensor Data Collection",
        "info": "",
        "x": 949.0000076293945,
        "y": 984.0000019073486,
        "wires": []
    },
    {
        "id": "f6900b2.d3e9ef8",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Calculating Remaining Time (Debug)",
        "func": "var sessionTimer =  flow.get(\"sessionTimer\") || 0; \nvar currTime = Date.now();\nvar remainingSecs = Math.floor((15000 - (currTime - sessionTimer))/1000) + 1;\n    \nif ( sessionTimer == 0 /* Inactive, No user signed in */ ) {\n    return null;\n} else {\n    \n    if ( remainingSecs <= 7 ) msg.payload = \"Remaining : \" + remainingSecs + \" secs\";  \n    else return null;\n}\n\nmsg.socketid = flow.get(\"clientid\") || \"B1234\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1156.0000305175781,
        "y": 942.0000200271606,
        "wires": [
            [
                "de95afea.546e3"
            ]
        ]
    },
    {
        "id": "f6f225f9.0408b8",
        "type": "ui_ui_control",
        "z": "fa6fd5ee77bd9c94",
        "name": "Stay in Sensor Group",
        "x": 1776.500099182129,
        "y": 866.0000057220459,
        "wires": [
            []
        ]
    },
    {
        "id": "91c7a0ab.ec163",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Sensor/History Goup",
        "func": "var msg = {};\nmsg.socketid = flow.get(\"clientid\") || undefined;\nmsg.payload = { group: {\n    show : [\"Dashboard_SensorData\", \"Dashboard_History\"],\n    hide : [\"Dashboard_Signin\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1473.5000305175781,
        "y": 866.0000038146973,
        "wires": [
            [
                "f6f225f9.0408b8"
            ]
        ]
    },
    {
        "id": "71d9aa2e.665fd4",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Signin Goup",
        "func": "var msg = {};\nmsg.payload = { group: {\n    hide : [\"Dashboard_SensorData\", \"Dashboard_History\"],\n    show : [\"Dashboard_Signin\"]\n}\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1444.5000915527344,
        "y": 907.0000419616699,
        "wires": [
            [
                "a2bd5885.a386c8"
            ]
        ]
    },
    {
        "id": "a2bd5885.a386c8",
        "type": "ui_ui_control",
        "z": "fa6fd5ee77bd9c94",
        "name": "Go to Signin Group",
        "x": 1764.5002479553223,
        "y": 904.0000419616699,
        "wires": [
            []
        ]
    },
    {
        "id": "6cabb33.95cd54c",
        "type": "debug",
        "z": "fa6fd5ee77bd9c94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1111.50004196167,
        "y": 720.5347557067871,
        "wires": []
    },
    {
        "id": "b960fa16.e7e618",
        "type": "ui_toast",
        "z": "fa6fd5ee77bd9c94",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "System In Use.",
        "name": "System In-Use Dialog",
        "x": 1751.1111793518066,
        "y": 752.1215353012085,
        "wires": [
            []
        ]
    },
    {
        "id": "126fd334.ed13ed",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "= 4 : System In Use",
        "func": "msg.payload = \"System is used by other user.\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1492.4443283081055,
        "y": 753.1215286254883,
        "wires": [
            [
                "b960fa16.e7e618"
            ]
        ]
    },
    {
        "id": "937e9201.0a617",
        "type": "inject",
        "z": "fa6fd5ee77bd9c94",
        "name": "Timer",
        "props": [
            {
                "p": "payload",
                "v": "",
                "vt": "date"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 921.5,
        "y": 1061.0000095367432,
        "wires": [
            [
                "ab530393.261bd"
            ]
        ]
    },
    {
        "id": "c4e61034.b5ec2",
        "type": "comment",
        "z": "fa6fd5ee77bd9c94",
        "name": "MQTT ? CoAP?",
        "info": "Expecting data from the actaul sensors.",
        "x": 1096.5000076293945,
        "y": 1020.9999942779541,
        "wires": []
    },
    {
        "id": "6d52854e.4e8d8c",
        "type": "ui_text",
        "z": "fa6fd5ee77bd9c94",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "Label Display",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 1820.4999923706055,
        "y": 1147.0001277923584,
        "wires": []
    },
    {
        "id": "ab530393.261bd",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Decode MySensor Message",
        "func": "\nvar mySensorsMessage = {}\nvar newPayload = {};\nvar timestamp = new Date();\n\nnewPayload.nodeId  =  3;\nnewPayload.type =  Math.floor( Math.random() * Math.floor(2));  // 0 or 1\nif ( newPayload.type === 0 /* temperature */ ) newPayload.value   =  Math.floor( Math.random() * Math.floor(30)) + 10; // 10 - 39\nelse newPayload.value   =  Math.floor( Math.random() * Math.floor(40)) + 40; // 40 - 79\n\nmsg.payload = newPayload; \n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1117.5000076293945,
        "y": 1062.0000171661377,
        "wires": [
            [
                "1e3effb1.5ff58",
                "d320c244.f24af"
            ]
        ]
    },
    {
        "id": "1e3effb1.5ff58",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Filter : temperature",
        "func": "if (msg.payload.nodeId == 3 && msg.payload.type === 0) {\n    var msg;\n    msg.payload = msg.payload.value;\n    msg.topic = \"Temperature\"\n    return msg;\n}    ",
        "outputs": 1,
        "noerr": 0,
        "x": 1334.5000534057617,
        "y": 1018.0000200271606,
        "wires": [
            [
                "ef7cf0b4.332f5",
                "38045480.64ec1c",
                "328b09bd.9901c6",
                "4381200b.380d3"
            ]
        ]
    },
    {
        "id": "ef7cf0b4.332f5",
        "type": "ui_gauge",
        "z": "fa6fd5ee77bd9c94",
        "name": "Gauge : Temperature",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature DHT22",
        "label": "MySensors v2",
        "format": "{{value}}°C",
        "min": 0,
        "max": "50",
        "colors": [
            "#66ccff",
            "#ff8000",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1584.5000076293945,
        "y": 1003.9999828338623,
        "wires": []
    },
    {
        "id": "d320c244.f24af",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Filter : humidity",
        "func": "if (msg.payload.nodeId == 3 && msg.payload.type === 1) {\n    var msg;\n    msg.payload = msg.payload.value;\n    msg.topic = \"Humidity\"\n    return msg;\n}    ",
        "outputs": 1,
        "noerr": 0,
        "x": 1320.5001068115234,
        "y": 1125.0000591278076,
        "wires": [
            [
                "d4eaedd1.98978",
                "38045480.64ec1c",
                "328b09bd.9901c6"
            ]
        ]
    },
    {
        "id": "d4eaedd1.98978",
        "type": "ui_gauge",
        "z": "fa6fd5ee77bd9c94",
        "name": "Gauge : Humidity",
        "group": "c35e46a8.b04ce8",
        "order": 0,
        "width": "0",
        "height": "0",
        "gtype": "gage",
        "title": "Humidity DHT22",
        "label": "MySensors v2",
        "format": "{{value}}%",
        "min": 0,
        "max": "100",
        "colors": [
            "#1a25ab",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "x": 1576.500072479248,
        "y": 1041.0000286102295,
        "wires": []
    },
    {
        "id": "38045480.64ec1c",
        "type": "function",
        "z": "fa6fd5ee77bd9c94",
        "name": "Attention : temperature & humidity",
        "func": "context.data = context.data || new Object();\n\nswitch (msg.topic) {\n    case \"Temperature\":\n        context.data.temperature = msg.payload;\n        msg = null;\n        break;\n    case \"Humidity\":\n        context.data.humidity = msg.payload;\n        msg = null;\n        break;\n    default:\n        msg = null;\n    \tbreak;\n\n}\n\nif(context.data.temperature !== null && context.data.humidity !== null && context.data.temperature !== undefined && context.data.humidity !== undefined) {\n\tmsgOut = \"\"; //new Object();\n    msgOut = \"Temerature : \" \n    msgOut += context.data.temperature.toString(); \n    msgOut+= \"°C - Humidity : \"; \n    msgOut+= context.data.humidity.toString();\n    msgOut+= \"%\";\n    context.data=null;\n    var msg = {};\n    msg.payload = msgOut;\n\treturn msg;\n} \n//else return msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1580.4999923706055,
        "y": 1148.000087738037,
        "wires": [
            [
                "6d52854e.4e8d8c"
            ]
        ]
    },
    {
        "id": "328b09bd.9901c6",
        "type": "ui_chart",
        "z": "fa6fd5ee77bd9c94",
        "name": "History : Temperature & Humidity",
        "group": "4de9506d.e7364",
        "order": 1,
        "width": "6",
        "height": "9",
        "label": "Temperature & Humidity",
        "chartType": "line",
        "legend": "true",
        "xformat": "%H:%M",
        "interpolate": "linear",
        "nodata": "No Data Yet",
        "dot": false,
        "ymin": "0",
        "ymax": "80",
        "removeOlder": "12",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": "",
        "useOneColor": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 2,
        "x": 1627.5000305175781,
        "y": 1079.0001049041748,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "4381200b.380d3",
        "type": "debug",
        "z": "fa6fd5ee77bd9c94",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1544.0590744018555,
        "y": 1114.6424465179443,
        "wires": []
    },
    {
        "id": "f0557a14152d478c",
        "type": "debug",
        "z": "fa6fd5ee77bd9c94",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1280,
        "y": 800,
        "wires": []
    }
]